{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","data","setData","react_default","a","createElement","className","type","id","onClick","document","getElementById","value","fetch","then","response","json","catch","error","console","log","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App"],"mappings":"6KAGe,SAASA,IAAM,IAAAC,EACFC,mBAAS,WADPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBK,EADmBH,EAAA,GACbI,EADaJ,EAAA,GAG1B,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,GAAG,YACpBL,EAAAC,EAAAC,cAAA,UACII,QAAS,WAC2C,IAA5CC,SAASC,eAAe,WAAWC,OAErCC,MAAM,IAAMH,SAASC,eAAe,WAAWC,OAC5CE,KAAK,SAAAC,GAAQ,OACVA,EAASC,SAEZF,KAAK,SAAAb,GACFC,EAAQD,EAAKc,YAEhBE,MAAM,SAAAC,GACHC,QAAQC,IAAIF,OAZ5B,WAoBFf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAlB,IAA0BL,EAA1B,OCjCd,IAYeoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAX,KAAAU,EAAAE,KAAA,UAAqBZ,KAAK,SAAAa,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACP/B,EAAAC,EAAAC,cAACF,EAAAC,EAAM+B,WAAP,KACEhC,EAAAC,EAAAC,cAAC+B,EAAD,OAEF1B,SAASC,eAAe,SAM1BU","file":"static/js/main.55b95dbb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nexport default function App() {\n    const [data, setData] = useState(\"-------\");\n\n    return(\n        <div className=\"parent\">\n          <div className=\"child\">\n            <p> Your Input Request To Server: </p>\n            <input type=\"text\" id=\"textbox\"/>\n              <button\n                  onClick={() => {\n                      if (document.getElementById(\"textbox\").value != \"\")\n                      {\n                        fetch(\"/\" + document.getElementById(\"textbox\").value)\n                          .then(response => \n                              response.json()\n                          )\n                          .then(data => {\n                              setData(data.response)\n                          })\n                          .catch(error => {\n                              console.log(error)\n                          })\n                      }\n                  }}\n              >\n                Submit\n              </button>\n            </div>\n            <div className=\"child\">\n              <p> Response From Server: </p>\n              <button className=\"but\"> {data} </button>\n            </div>\n        </div>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}